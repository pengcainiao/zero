syntax ="proto3";
package pb ;
option go_package=".;pb";

import "protos/grpc_base.proto";

message GetRecordRequest{
    string RecordID = 1;                // 笔记ID
    UserContext Context =2;
}

message GetRecordResponse{
    string RecordID = 1;                // 笔记ID
    int32 RecordType = 2;               // 事项类型
    string Title = 3;                   // 笔记标题
    int32 ShareState = 4;               // 分享状态
    string CreatorID = 5;               // 创建人
    int64 CreateAt = 6;                 // 创建时间
    repeated string RefTasks = 7;       // 关联的事项
    repeated string RemindUserId = 8;   // 艾特的用户ID
}

message GetRecordDetailsRequest{
    string RecordID = 1;                // 笔记ID，多个用逗号隔开
    UserContext Context =2;
}

message GetRecordDetailsResponse{
    repeated RecordDetail Data = 1;     // 笔记数据
}

message RecordDetail{
    string RecordID = 1;                // 笔记id
    string Title = 2;                   // 笔记标题
    int32 ShareState = 3;               // 分享状态
    string CreatorID = 4;               // 创建人
}

message GetRelationRecordTotalRequest{
    repeated string RefDispatchsID = 1; // 派发任务id
    UserContext Context =2;
}

message GetRelationRecordTotalResponse{
    repeated RelationDetail Data = 1;   // map[ref_dispatch_id]Detail
}

message RelationDetail{
    string DispatchID = 1;              // 派发任务id
    string UserID = 2;                  // 用户id
    int64 Total = 3;                    // 关联笔记数量
    int64 NoteTotal = 4;                // 其中笔记数量
    int64 RecordTotal = 5;              // 其中记录数量
}

message GetRecordTakersRequest{
    string RecordID = 1;                // 笔记id
    UserContext Context =2;
}

message GetRecordTakersResponse{
    repeated string TakersID = 1;       // 笔记承接人用户ID列表
}

message RecordExistsRequest{
    string RecordID = 1;                // 笔记id
    UserContext Context =2;
}

message RecordExistsResponse{
    bool Exists = 1;                    // 是否存在
}

message BatchUnBindTaskRequest{
    int32 IsClearedRecord = 1;          // 是否清空记录，0->转成笔记，1->清空记录
    string RefDispatchID = 2;           // 派发任务id
    UserContext Context = 3;
}

message IncrRecordCommentNumRequest{
    string RecordID = 1;                // 笔记id
    int32 Num = 2;                      // 数量
    UserContext Context = 3;
}

message GenerateRecordForNewUsersRequest{
    string UserID = 1;                  // 用户id
    string SenderUserID = 2;            // 发送者用户id (环境区分）
    UserContext Context = 3;
}

service Record{
    rpc GetRecord(GetRecordRequest) returns(Response);                              // 查询笔记
    rpc GetRecordDetails(GetRecordDetailsRequest) returns(Response);                // 查询笔记名称
    rpc GetRelationRecordTotal(GetRelationRecordTotalRequest) returns(Response);    // 查询关联笔记总数
    rpc GetRecordTakers(GetRecordTakersRequest) returns(Response);                  // 查询笔记承接人ID
    rpc RecordExists(RecordExistsRequest) returns(Response);                        // 判断笔记是否存在
    rpc BatchUnBindTask(BatchUnBindTaskRequest) returns(Response);                  // 批量解绑任务
    rpc IncrRecordCommentNum(IncrRecordCommentNumRequest) returns(Response);        // 增量笔记评论数量
    rpc GenerateRecordForNewUsers(GenerateRecordForNewUsersRequest) returns(Response);   // 为新注册用户生成一条笔记
}
