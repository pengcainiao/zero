syntax ="proto3";
package pb ;
option go_package=".;pb";

import "protos/grpc_base.proto";

message CommonCreateCommentRequest{
    string RefType = 1;                 // 关联类型，task，record
    string RefID = 2;                   // 关联id
    int64 MsgType = 3;                  // 消息类型 
    int64 SystemType = 4;               // 系统消息类型
    string Content = 5;                 // 消息内容
    string AffectedUID = 6;             // 受影响人id，多个用逗号隔开
    string NotifyUID = 7;               // 通知用户id，多个用逗号隔开
    bool NotPushDynamic = 8;            // 不推送动态
    UserContext Context = 9;
    bool NotStore = 10;                 // 不需要存储数据库
    string Cronjobs  = 11;              // 需要推送的定时任务，json格式
    map<string, string> Changes = 12;   // 变化 
    bool NotPushSocket = 13;            // 不推送websocket
    string BatchID = 14;                // 是否批量操作
    int32 BatchType = 15;               // 批量类型
    string BatchRefID = 16;             // 批量操作关联id
    bool MarkRead = 17;                 // 标记为已读
    int64 MsgForamt = 18;               // 消息格式
    repeated File Files = 19;           // 文件信息
    string KrID = 20;                   // kr id
}

message File {
    string ID = 1;                      // 文件id
    string Entry = 2;                   // 入口
    string Name = 3;                    // 名称
    string Origin = 4;                  // 来源
    string Size = 5;                    // 文件大小
}

message CommonCreateCommentResponse{
    string CommentID = 1;               // 评论id
}

message GetTaskNewCommentRequest{
    map<string, string> CommentMap = 1; // 评论id,map[task_id]comment_id
    UserContext Context = 2;
}

message GetTaskNewCommentResponse{
    repeated TaskNewComment Data = 1;   // 任务最新评论
}

message TaskNewComment{
    string TaskID = 1;                  // 事项id
    string Content = 2;                 // 评论内容
    bool IsImportant = 3;               // 是否重点
    int64 CreateAt = 4;                 // 评论时间
}

message MarkReadCommentRequest{
    string RefType = 1;                 // 关联类型，task，record
    string RefID = 2;                   // 关联id
    UserContext Context =3;
}

message UpdateCommentFileInfoRequest{
    string RefType = 1;                 // 关联类型，task，record
    string RefID = 2;                   // 关联id
    string FileID = 3;                  // 文件id
    string FileName = 4;                // 文件名称
    UserContext Context = 5;
}

message QueryUserTaskCommentTotalRequest{
    string RefID = 1;
    string UserID = 2;
    UserContext Context = 3;
}

message QueryUserTaskCommentTotalResponse{
    repeated UserTaskCommentTotal Data = 1;
}

message UserTaskCommentTotal{
    string UserID = 1;                  // 用户id
    int64 CommentTotal = 2;             // 评论数量
    int64 ImportantTotal = 3;           // 重点数量
    int64 QuoteTotal = 4;               // 引用数量
    int64 GadgetTotal = 5;              // 小工具数量
    int64 GadgetMeetingTotal = 6;       // 小工具会议数量
    int64 GadgetTimeCollectTotal = 7;   // 小工具时间征集数量
    int64 GadgetNoticeTotal = 8;        // 小工具公告数量
    int64 GadgetTodoTotal = 9;          // 小工具待办数量
}

message BatchQueryChatUsersRequest {
    UserContext Context = 1;
    repeated string ChatsID = 2;        // 聊天id列表
}

message BatchQueryChatUsersResponse {
    repeated ChatUser ChatUsers = 1;    // 聊天用户信息
}

message ChatUser {
    string ChatID = 1;
    string UserID = 2;
}

service UserInteraction{
    rpc CommonCreateComment(CommonCreateCommentRequest) returns(Response);              // 创建评论
    rpc GetTaskNewComment(GetTaskNewCommentRequest) returns(Response);                  // 获取事项最新评论
    rpc UpdateCommentFileInfo(UpdateCommentFileInfoRequest) returns(Response);          // 更新评论文件信息
    rpc QueryUserTaskCommentTotal(QueryUserTaskCommentTotalRequest) returns(Response);  // 更新评论文件信息
    rpc BatchQueryChatUsers(BatchQueryChatUsersRequest) returns(Response);              // 批量查询聊天用户
}
