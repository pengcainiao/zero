syntax ="proto3";
package pb ;
option go_package=".;pb";

import "protos/grpc_base.proto";

message SendSseMessageRequest{
  string Event =1 ;
  ExchangeMessage Data =2 ;
  UserContext Context =3;
}

message ExchangeMessage {
    int32 Code                  =1;                                    //消息编码
    repeated string NotifyTo    =2;                                       //消息通知人列表
    string Message              =3;                    //消息
    string Title                =4;                     //标题
    string RefID                =5;                    //内容关联的消息ID
}

message TempRemoveMessageRequest {
    string FlyeleID = 1;                // 事项id
    repeated string UserID = 2;         // 删除消息用户id列表
    UserContext Context = 3;
}

message SendSMSMessageRequest{
  string TemplateCode =1 ;
  repeated string PhoneNumber =2;
  map<string,string> Parameters =3 ;
  UserContext Context =4;
}

// RecentlyUpdate
message RecentlyUpdateRequest{
  UserContext Context= 1;
  string FilterBy = 2;                      // 过滤条件
  string TaskID = 3;                        // 事项id
  string TopParentID = 4;                   // 事项id
  int32 ShowMode = 5;                       // 显示模式
  Paging Paging = 6;                        // 分页数据
}

message RecentlyUpdateResponse{
  int32 Total = 1;                          // 角标总数
  bool HasRedDot = 2;                       // 是否有红点
  repeated RecentlyUpdateTasks Tasks = 3;   // 列表数据
}

message RecentlyUpdateTasks{
  string RefID = 1;                         // 事项id
  string RefType = 2;                       // 类型
  string CommentID = 3;                     // 最新评论id
  int32  FnType = 4;                        // 功能
  int32  Unread = 5;                        // 角标数
  bool RemindMe = 6;                        // @我
  bool IsFront = 7;                         // 置顶
  bool IsRedDot = 8;                        // 红点
  int64 TopmostAt = 9;                      // 置顶时间
  bool IsChild = 10;                        // 是否有子事项
  bool IsUnreadChild = 11;                  // 是否有未读子事项
  string TopParentID = 12;                  // 顶级事项id
}

//TimeCollectTransToMeeting
message TimeCollectTransToMeetingRequest{
  string TaskID =1 ;
  UserContext Context = 2;
}

message QueryRecordUnreadMessagesRequest{
    UserContext Context = 1;
}

message QueryRecordUnreadMessagesResponse{
    repeated CommentDetail CommentDetails = 1;
    int32 Total = 2;
}

message CommentDetail {
    string RecordID = 1;
	repeated string Comments = 2;
	int32 Total = 3;
}

message UpdateUserPrevMessageIDRequest {
    string TaskID = 1;
    string CommentID = 2;
    UserContext Context = 3;
}

message QueryUserUnreadMessageSummaryRequest {
    UserContext Context = 1;
}

message QueryUserUnreadMessageSummaryResponse {
    UnreadTaskMessage Task = 1;
    UnreadRecordMessage Record = 2;
}

message UnreadTaskMessage {
    int32 UnreadTotal = 1;
    bool HasRedDot = 2;
}

message UnreadRecordMessage {
    int32 UnreadTotal = 1;
	string NewShareAvatar = 2;
}

service Notice{
  //  SendSseMessage 推送SSE消息
  rpc SendSseMessage(SendSseMessageRequest) returns(Response) ;
  //  TempRemoveMessage 临时删除事项列表消息
  rpc TempRemoveMessage(TempRemoveMessageRequest) returns(Response) ;
  //  SendSMSMessage 发送短信
  rpc SendSMSMessage(SendSMSMessageRequest)returns(Response) ;
  // RecentlyUpdate 最近更新列表
  rpc RecentlyUpdate(RecentlyUpdateRequest) returns(Response) ;
  // TimeCollectTransToMeeting 时间征集转会议
  rpc TimeCollectTransToMeeting(TimeCollectTransToMeetingRequest) returns(Response) ;
  // QueryRecordUnreadMessages 查询笔记未读消息数
  rpc QueryRecordUnreadMessages(QueryRecordUnreadMessagesRequest) returns(Response);
  // UpdateUserPrevMessageID 更新用户上一条消息id
  rpc UpdateUserPrevMessageID(UpdateUserPrevMessageIDRequest) returns(Response);
  // QueryUserUnreadMessageSummary 查询用户未读消息汇总
  rpc QueryUserUnreadMessageSummary(QueryUserUnreadMessageSummaryRequest) returns(Response);
}
